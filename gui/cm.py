#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.3 on Fri Dec 28 11:29:50 2018
#

import wx
import wx.grid

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
import matplotlib_canvas
import numpy as np
import pandas as pd
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((800, 600))
        self.wildcard='CSV文件(*.csv)|*.csv|文本文件(*.txt)|*.txt|所有文件(*.*)|*.*'
        self.filelist = []
        self.dfs = []
        self.window_1 = wx.SplitterWindow(self, wx.ID_ANY)
        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)
        self.tree_ctrl_1 = wx.TreeCtrl(self.window_1_pane_1, wx.ID_ANY)
        # 创建根节点和子节点并展开
        root = self.tree_ctrl_1.AddRoot('项目', image=0)
        self.item1 = self.tree_ctrl_1.AppendItem(root, '训练数据', 0)
        self.tree_ctrl_1.Expand(root)
        self.tree_ctrl_1.SelectItem(root)
        self.window_1_pane_2 = wx.Panel(self.window_1, wx.ID_ANY)
        self.notebook_1 = wx.Notebook(self.window_1_pane_2, wx.ID_ANY)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.window_2 = wx.SplitterWindow(self.notebook_1_pane_1, wx.ID_ANY)
        self.window_2_pane_1 = wx.Panel(self.window_2, wx.ID_ANY)
        self.choice_1 = wx.Choice(self.window_2_pane_1, wx.ID_ANY, choices=[u"<\u9009\u62e9\u6570\u636e\u96c6>"])
        self.list_box_1 = wx.ListBox(self.window_2_pane_1, wx.ID_ANY, choices=[])
        self.notebook_2 = wx.Notebook(self.window_2_pane_1, wx.ID_ANY)
        self.notebook_2_pane_1 = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.checkbox_1 = wx.CheckBox(self.notebook_2_pane_1, wx.ID_ANY, u"\u65e5\u671f\u548c\u65f6\u95f4")
        self.checkbox_2 = wx.CheckBox(self.notebook_2_pane_1, wx.ID_ANY, u"\u6807\u51c6\u5316\u6570\u636e")
        self.checkbox_3 = wx.CheckBox(self.notebook_2_pane_1, wx.ID_ANY, u"\u663e\u793a\u62a5\u8b66\u7ebf")
        self.choice_2 = wx.Choice(self.notebook_2_pane_1, wx.ID_ANY, choices=[u"\u663e\u793a", u"\u6807\u8bb0", u"\u9690\u85cf"])
        self.choice_3 = wx.Choice(self.notebook_2_pane_1, wx.ID_ANY, choices=[u"\u663e\u793a", u"\u6807\u8bb0", u"\u9690\u85cf"])
        self.notebook_2_ = wx.Panel(self.notebook_2, wx.ID_ANY)
        self.checkbox_4 = wx.CheckBox(self.notebook_2_, wx.ID_ANY, u"\u9009\u62e9\u6570\u636e\u70b9\u8fdb\u884c\u7f16\u8f91")
        self.button_1 = wx.Button(self.notebook_2_, wx.ID_ANY, u"\u5305\u542b")
        self.button_2 = wx.Button(self.notebook_2_, wx.ID_ANY, u"\u6392\u9664")
        self.button_3 = wx.Button(self.notebook_2_, wx.ID_ANY, u"\u5220\u9664")
        self.window_2_pane_2 = wx.Panel(self.window_2, wx.ID_ANY)
        self.window_3 = matplotlib_canvas.MatplotlibCanvas(self.window_2_pane_2, wx.ID_ANY)
        self.notebook_1_ = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.window_4 = wx.SplitterWindow(self.notebook_1_, wx.ID_ANY)
        self.window_4_pane_1 = wx.Panel(self.window_4, wx.ID_ANY)
        self.check_list_box_1 = wx.CheckListBox(self.window_4_pane_1, wx.ID_ANY, choices=[])
        self.list_box_2 = wx.ListBox(self.window_4_pane_1, wx.ID_ANY, choices=[])
        self.list_box_3 = wx.ListBox(self.window_4_pane_1, wx.ID_ANY, choices=[])
        self.checkbox_5 = wx.CheckBox(self.window_4_pane_1, wx.ID_ANY, u"\u663e\u793a\u9884\u89c8")
        self.choice_4 = wx.Choice(self.window_4_pane_1, wx.ID_ANY, choices=[u"\u663e\u793a", u"\u6807\u8bb0", u"\u9690\u85cf"])
        self.choice_5 = wx.Choice(self.window_4_pane_1, wx.ID_ANY, choices=[u"\u663e\u793a", u"\u6807\u8bb0", u"\u9690\u85cf"])
        self.button_4 = wx.Button(self.window_4_pane_1, wx.ID_ANY, u"\u9884\u89c8")
        self.button_5 = wx.Button(self.window_4_pane_1, wx.ID_ANY, u"\u6bd4\u8f83")
        self.button_6 = wx.Button(self.window_4_pane_1, wx.ID_ANY, u"\u5305\u542b")
        self.button_7 = wx.Button(self.window_4_pane_1, wx.ID_ANY, u"\u6bd4\u8f83")
        self.button_8 = wx.Button(self.window_4_pane_1, wx.ID_ANY, u"\u5220\u9664")
        self.window_4_pane_2 = wx.Panel(self.window_4, wx.ID_ANY)
        self.window_5 = matplotlib_canvas.MatplotlibCanvas(self.window_4_pane_2, wx.ID_ANY)
        self.notebook_1_pane_2 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.choice_6 = wx.Choice(self.notebook_1_pane_2, wx.ID_ANY, choices=[u"\u4e2d\u534e", u"\u7ea2\u53cc\u559c", u"\u5229\u7fa4"])
        self.grid_1 = wx.grid.Grid(self.notebook_1_pane_2, wx.ID_ANY, size=(1, 1))
        self.notebook_1_pane_3 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.grid_2 = wx.grid.Grid(self.notebook_1_pane_3, wx.ID_ANY, size=(1, 1))
        self.notebook_1_pane_4 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.window_6 = wx.SplitterWindow(self.notebook_1_pane_4, wx.ID_ANY)
        self.window_6_pane_1 = wx.Panel(self.window_6, wx.ID_ANY)
        self.choice_7 = wx.Choice(self.window_6_pane_1, wx.ID_ANY, choices=[u"<\u9009\u62e9\u6570\u636e\u96c6>"])
        self.list_box_4 = wx.ListBox(self.window_6_pane_1, wx.ID_ANY, choices=[])
        self.window_6_pane_2 = wx.Panel(self.window_6, wx.ID_ANY)
        self.window_7 = matplotlib_canvas.MatplotlibCanvas(self.window_6_pane_2, wx.ID_ANY)
        self.notebook_1_pane_5 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.list_box_5 = wx.ListBox(self.notebook_1_pane_5, wx.ID_ANY, choices=[])
        self.spin_ctrl_1 = wx.SpinCtrl(self.notebook_1_pane_5, wx.ID_ANY, "0", min=0, max=100)
        self.spin_ctrl_2 = wx.SpinCtrl(self.notebook_1_pane_5, wx.ID_ANY, "0", min=0, max=100)
        self.spin_ctrl_3 = wx.SpinCtrl(self.notebook_1_pane_5, wx.ID_ANY, "0", min=0, max=100)
        self.spin_ctrl_4 = wx.SpinCtrl(self.notebook_1_pane_5, wx.ID_ANY, "0", min=0, max=100)
        self.spin_ctrl_5 = wx.SpinCtrl(self.notebook_1_pane_5, wx.ID_ANY, "0", min=0, max=100)
        self.button_9 = wx.Button(self.notebook_1_pane_5, wx.ID_ANY, u"\u4fdd\u5b58")
        self.button_10 = wx.Button(self.notebook_1_pane_5, wx.ID_ANY, u"\u53d6\u6d88")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TREE_SEL_CHANGED, self.openfile, self.tree_ctrl_1)
        self.Bind(wx.EVT_CHOICE, self.onchoice1, self.choice_1)
        self.Bind(wx.EVT_LISTBOX, self.onlistbox1, self.list_box_1)
        self.Bind(wx.EVT_CHECKLISTBOX, self.onchecklistbox1, self.check_list_box_1)
        self.Bind(wx.EVT_LISTBOX, self.onlistbox2, self.list_box_2)
        self.Bind(wx.EVT_LISTBOX, self.onlistbox3, self.list_box_3)
        self.Bind(wx.EVT_CHOICE, self.onchoice7, self.choice_7)
        self.Bind(wx.EVT_LISTBOX, self.onlistbox4, self.list_box_4)
        self.Bind(wx.EVT_LISTBOX, self.onlistbox5, self.list_box_5)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(u"\u5317\u4eac\u5929\u5de5\u667a\u9020\u79d1\u6280\u6709\u9650\u516c\u53f8")
        self.choice_1.SetSelection(0)
        self.list_box_1.SetMinSize((190, 230))
        self.choice_2.SetSelection(0)
        self.choice_3.SetSelection(0)
        self.notebook_2.SetMinSize((100, 166))
        self.window_2.SetMinimumPaneSize(200)
        self.list_box_2.SetMinSize((190, 120))
        self.list_box_3.SetMinSize((190, 120))
        self.choice_4.SetSelection(0)
        self.choice_5.SetSelection(0)
        self.window_4.SetMinimumPaneSize(200)
        self.choice_6.SetSelection(0)
        self.grid_1.CreateGrid(0, 0)
        self.grid_2.CreateGrid(0, 0)
        self.choice_7.SetSelection(0)
        self.list_box_4.SetMinSize((190, 230))
        self.window_6.SetMinimumPaneSize(200)
        self.list_box_5.SetMinSize((200, 230))
        self.window_1.SetMinimumPaneSize(200)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.FlexGridSizer(0, 3, 0, 0)
        sizer_31 = wx.BoxSizer(wx.VERTICAL)
        sizer_25 = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_5, wx.ID_ANY, u"\u9608\u503c"), wx.VERTICAL)
        sizer_30 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_29 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_28 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_27 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_26 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_24 = wx.StaticBoxSizer(wx.StaticBox(self.notebook_1_pane_5, wx.ID_ANY, u"\u4f3a\u670d\u7535\u673a\u76d1\u63a7\u53c2\u6570"), wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_23 = wx.BoxSizer(wx.VERTICAL)
        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        sizer_32 = wx.StaticBoxSizer(wx.StaticBox(self.window_6_pane_1, wx.ID_ANY, u"\u4f3a\u670d\u7535\u673a\u76d1\u63a7\u53c2\u6570"), wx.VERTICAL)
        sizer_20 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18 = wx.BoxSizer(wx.VERTICAL)
        sizer_19 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_17 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_13 = wx.BoxSizer(wx.VERTICAL)
        sizer_38 = wx.StaticBoxSizer(wx.StaticBox(self.window_4_pane_1, wx.ID_ANY, u"\u9009\u62e9\u6a21\u5f0f"), wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_37 = wx.StaticBoxSizer(wx.StaticBox(self.window_4_pane_1, wx.ID_ANY, u"\u663e\u793a\u9009\u9879"), wx.VERTICAL)
        sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_36 = wx.StaticBoxSizer(wx.StaticBox(self.window_4_pane_1, wx.ID_ANY, u"Y\u8f74"), wx.VERTICAL)
        sizer_35 = wx.StaticBoxSizer(wx.StaticBox(self.window_4_pane_1, wx.ID_ANY, u"X\u8f74"), wx.VERTICAL)
        sizer_34 = wx.StaticBoxSizer(wx.StaticBox(self.window_4_pane_1, wx.ID_ANY, u"\u8bad\u7ec3\u96c6"), wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_33 = wx.StaticBoxSizer(wx.StaticBox(self.window_2_pane_1, wx.ID_ANY, u"\u9009\u62e9\u6570\u636e\u70b9"), wx.VERTICAL)
        sizer_6 = wx.StaticBoxSizer(wx.StaticBox(self.window_2_pane_1, wx.ID_ANY, u"\u9009\u62e9\u6570\u636e\u96c6"), wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.tree_ctrl_1, 1, wx.EXPAND, 0)
        self.window_1_pane_1.SetSizer(sizer_2)
        sizer_6.Add(self.choice_1, 0, wx.EXPAND, 0)
        sizer_5.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_33.Add(self.list_box_1, 0, wx.EXPAND, 0)
        sizer_5.Add(sizer_33, 1, wx.EXPAND, 0)
        sizer_7.Add(self.checkbox_1, 0, 0, 0)
        sizer_7.Add(self.checkbox_2, 0, 0, 0)
        sizer_7.Add(self.checkbox_3, 0, 0, 0)
        label_3 = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, u"\u8fc7\u6ee4\u6570\u636e  ")
        sizer_8.Add(label_3, 0, 0, 0)
        sizer_8.Add(self.choice_2, 0, 0, 0)
        sizer_7.Add(sizer_8, 1, wx.EXPAND, 0)
        label_4 = wx.StaticText(self.notebook_2_pane_1, wx.ID_ANY, u"\u6392\u9664\u6570\u636e  ")
        sizer_9.Add(label_4, 0, 0, 0)
        sizer_9.Add(self.choice_3, 0, 0, 0)
        sizer_7.Add(sizer_9, 1, wx.EXPAND, 0)
        self.notebook_2_pane_1.SetSizer(sizer_7)
        sizer_10.Add(self.checkbox_4, 0, 0, 0)
        sizer_10.Add(self.button_1, 0, 0, 0)
        sizer_10.Add(self.button_2, 0, 0, 0)
        sizer_10.Add(self.button_3, 0, 0, 0)
        self.notebook_2_.SetSizer(sizer_10)
        self.notebook_2.AddPage(self.notebook_2_pane_1, u"\u663e\u793a")
        self.notebook_2.AddPage(self.notebook_2_, u"\u6570\u636e\u7f16\u8f91")
        sizer_5.Add(self.notebook_2, 1, wx.EXPAND, 0)
        self.window_2_pane_1.SetSizer(sizer_5)
        sizer_11.Add(self.window_3, 1, wx.EXPAND, 0)
        self.window_2_pane_2.SetSizer(sizer_11)
        self.window_2.SplitVertically(self.window_2_pane_1, self.window_2_pane_2, 100)
        sizer_4.Add(self.window_2, 1, wx.EXPAND, 0)
        self.notebook_1_pane_1.SetSizer(sizer_4)
        sizer_34.Add(self.check_list_box_1, 0, wx.EXPAND, 0)
        sizer_13.Add(sizer_34, 1, wx.EXPAND, 0)
        sizer_35.Add(self.list_box_2, 0, wx.EXPAND, 0)
        sizer_13.Add(sizer_35, 1, wx.EXPAND, 0)
        sizer_36.Add(self.list_box_3, 0, wx.EXPAND, 0)
        sizer_13.Add(sizer_36, 1, wx.EXPAND, 0)
        sizer_37.Add(self.checkbox_5, 0, 0, 0)
        label_9 = wx.StaticText(self.window_4_pane_1, wx.ID_ANY, u"\u6392\u9664\u6570\u636e  ")
        sizer_14.Add(label_9, 0, 0, 0)
        sizer_14.Add(self.choice_4, 0, 0, 0)
        sizer_37.Add(sizer_14, 1, wx.EXPAND, 0)
        label_10 = wx.StaticText(self.window_4_pane_1, wx.ID_ANY, u"\u8fc7\u6ee4\u6570\u636e  ")
        sizer_15.Add(label_10, 0, 0, 0)
        sizer_15.Add(self.choice_5, 0, 0, 0)
        sizer_37.Add(sizer_15, 1, wx.EXPAND, 0)
        sizer_13.Add(sizer_37, 1, wx.EXPAND, 0)
        sizer_16.Add(self.button_4, 0, 0, 0)
        sizer_16.Add(self.button_5, 0, 0, 0)
        sizer_38.Add(sizer_16, 1, wx.EXPAND, 0)
        sizer_38.Add(self.button_6, 0, 0, 0)
        sizer_38.Add(self.button_7, 0, 0, 0)
        sizer_38.Add(self.button_8, 0, 0, 0)
        sizer_13.Add(sizer_38, 1, wx.EXPAND, 0)
        self.window_4_pane_1.SetSizer(sizer_13)
        sizer_17.Add(self.window_5, 1, wx.EXPAND, 0)
        self.window_4_pane_2.SetSizer(sizer_17)
        self.window_4.SplitVertically(self.window_4_pane_1, self.window_4_pane_2, 100)
        sizer_12.Add(self.window_4, 1, wx.EXPAND, 0)
        self.notebook_1_.SetSizer(sizer_12)
        label_12 = wx.StaticText(self.notebook_1_pane_2, wx.ID_ANY, u"\u751f\u4ea7\u724c\u53f7  ")
        sizer_19.Add(label_12, 0, 0, 0)
        sizer_19.Add(self.choice_6, 0, 0, 0)
        sizer_18.Add(sizer_19, 1, wx.EXPAND, 0)
        sizer_18.Add(self.grid_1, 1, wx.EXPAND, 0)
        self.notebook_1_pane_2.SetSizer(sizer_18)
        sizer_20.Add(self.grid_2, 1, wx.EXPAND, 0)
        self.notebook_1_pane_3.SetSizer(sizer_20)
        sizer_22.Add(self.choice_7, 0, wx.EXPAND, 0)
        sizer_32.Add(self.list_box_4, 0, wx.EXPAND, 0)
        sizer_22.Add(sizer_32, 1, wx.EXPAND, 0)
        self.window_6_pane_1.SetSizer(sizer_22)
        sizer_23.Add(self.window_7, 1, wx.EXPAND, 0)
        self.window_6_pane_2.SetSizer(sizer_23)
        self.window_6.SplitVertically(self.window_6_pane_1, self.window_6_pane_2, 100)
        sizer_21.Add(self.window_6, 1, wx.EXPAND, 0)
        self.notebook_1_pane_4.SetSizer(sizer_21)
        sizer_24.Add(self.list_box_5, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(sizer_24, 1, wx.EXPAND, 0)
        label_16 = wx.StaticText(self.notebook_1_pane_5, wx.ID_ANY, u"\u62a5\u8b66\u4e0a\u9650  ")
        sizer_26.Add(label_16, 0, 0, 0)
        sizer_26.Add(self.spin_ctrl_1, 0, 0, 0)
        sizer_25.Add(sizer_26, 1, wx.ALIGN_RIGHT, 0)
        label_17 = wx.StaticText(self.notebook_1_pane_5, wx.ID_ANY, u"\u9884\u8b66\u4e0a\u9650  ")
        sizer_27.Add(label_17, 0, 0, 0)
        sizer_27.Add(self.spin_ctrl_2, 0, 0, 0)
        sizer_25.Add(sizer_27, 1, wx.ALIGN_RIGHT, 0)
        label_18 = wx.StaticText(self.notebook_1_pane_5, wx.ID_ANY, u"\u8bbe\u5b9a\u503c  ")
        sizer_28.Add(label_18, 0, 0, 0)
        sizer_28.Add(self.spin_ctrl_3, 0, 0, 0)
        sizer_25.Add(sizer_28, 1, wx.ALIGN_RIGHT, 0)
        label_19 = wx.StaticText(self.notebook_1_pane_5, wx.ID_ANY, u"\u9884\u8b66\u4e0b\u9650  ")
        sizer_29.Add(label_19, 0, 0, 0)
        sizer_29.Add(self.spin_ctrl_4, 0, 0, 0)
        sizer_25.Add(sizer_29, 1, wx.ALIGN_RIGHT, 0)
        label_20 = wx.StaticText(self.notebook_1_pane_5, wx.ID_ANY, u"\u62a5\u8b66\u4e0b\u9650  ")
        sizer_30.Add(label_20, 0, 0, 0)
        sizer_30.Add(self.spin_ctrl_5, 0, 0, 0)
        sizer_25.Add(sizer_30, 1, wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(sizer_25, 1, wx.EXPAND, 0)
        sizer_31.Add(self.button_9, 0, 0, 0)
        sizer_31.Add(self.button_10, 0, 0, 0)
        grid_sizer_1.Add(sizer_31, 1, wx.EXPAND, 0)
        self.notebook_1_pane_5.SetSizer(grid_sizer_1)
        self.notebook_1.AddPage(self.notebook_1_pane_1, u"\u8bad\u7ec3\u6570\u636e\u7ed8\u56fe")
        self.notebook_1.AddPage(self.notebook_1_, u"\u53ef\u89c6\u5316\u6bd4\u8f83")
        self.notebook_1.AddPage(self.notebook_1_pane_2, u"\u64cd\u4f5c\u53c2\u6570\u4f18\u5316")
        self.notebook_1.AddPage(self.notebook_1_pane_3, u"\u6700\u4f18\u53c2\u6570\u96c6")
        self.notebook_1.AddPage(self.notebook_1_pane_4, u"\u4f3a\u670d\u7535\u673a\u72b6\u6001\u68c0\u6d4b")
        self.notebook_1.AddPage(self.notebook_1_pane_5, u"\u76d1\u63a7\u53c2\u6570\u9608\u503c")
        sizer_3.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.window_1_pane_2.SetSizer(sizer_3)
        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2, 100)
        sizer_1.Add(self.window_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def gettable(self):
        if self.dfs:
            return self.dfs[0]

    def openfile(self, event):  # wxGlade: MyFrame.<event_handler>
        dlg = wx.FileDialog(self, message='打开文件', defaultDir='', defaultFile='', wildcard=self.wildcard, style=wx.FD_OPEN)
        if dlg.ShowModal() == wx.ID_OK:
            file = dlg.GetPath()
            if file not in self.filelist:
                self.filelist.append(file)
                filename = file.split('\\')[-1]
                self.tree_ctrl_1.AppendItem(self.item1, filename, 1)
                self.tree_ctrl_1.Expand(self.item1)

                self.df = pd.read_csv(file)
                self.df = self.df[4:]
                self.df['Point Name'] = pd.to_datetime(self.df['Point Name'])
                self.df = self.df.set_index('Point Name')
                self.dfs.append(self.df)

                self.choice_1.AppendItems(filename)
                self.choice_7.AppendItems(filename)
                # 只有导入第一个文件的时候选择默认选项
                if len(self.dfs)<2:
                    self.choice_1.SetSelection(0)
                self.check_list_box_1.AppendItems(filename)

                #使用grid显示表格数据
                gv=self.grid_2
                gv.SetRowLabelSize(80)#默认行头很宽，设置一下，不过一旦设置了，行头的宽度就不可拖动了
                gv.EnableDragRowSize(False)#默认表格的每格是可以拖动高度的，这里关闭
                gv.SetDefaultCellOverflow(False)
                result=self.gettable()
                dt=myTable(result)#数据源
                # gv.ClearGrid()#清空表格
                gv.SetTable(dt)
                self.grid_2.Enable(True)
                gv.GetColLabelValue()#此句代码有误，但是不加此句程序会卡死退出
            dlg.Destroy()
        event.Skip()

    def onchoice1(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selidx = self.choice_1.GetSelection()
        self.list_box_1.InsertItems(self.dfs[self.selidx-1].columns, 0)
        event.Skip()

    def onlistbox1(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selName = self.list_box_1.GetStringSelection()
        self.simpleplot(parent=self.window_3)
        event.Skip()

    def onchecklistbox1(self, event):  # wxGlade: MyFrame.<event_handler>
        self.checked1 = self.check_list_box_1.GetCheckedItems()
        col = self.dfs[self.checked1[0]].columns
        self.list_box_2.AppendItems(col)
        self.list_box_3.AppendItems(col)
        event.Skip()

    def onlistbox2(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selNamex = self.list_box_2.GetStringSelection()
        self.x = self.dfs[self.checked1[0]][self.selNamex].astype('float')
        # self.scatter()
        event.Skip()

    def onlistbox3(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selNamey = self.list_box_3.GetStringSelection()
        self.y = self.dfs[self.checked1[0]][self.selNamey].astype('float')
        self.scatter()
        event.Skip()

    def onchoice7(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selidx = self.choice_7.GetSelection()
        self.list_box_4.InsertItems(self.dfs[self.selidx-1].columns, 0)
        self.list_box_5.InsertItems(self.dfs[self.selidx-1].columns, 0)
        event.Skip()

    def onlistbox4(self, event):  # wxGlade: MyFrame.<event_handler>
        self.selName = self.list_box_4.GetStringSelection()
        # self.simpleplot(parent=self.window_7)
        self.flexplot(parent=self.window_7)
        event.Skip()

    def onlistbox5(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'onlistbox5' not implemented!")
        event.Skip()

    def simpleplot(self, parent):
        canvas = parent.axes
        canvas.cla()
        canvas.plot(self.dfs[self.selidx-1].index, self.dfs[self.selidx-1][self.selName].astype('float'), color='g', linewidth=0.5)
        canvas.grid(True, color="grey", linestyle='--')
        parent.draw()
    
    def scatter(self):
        canvas = self.window_5.axes
        canvas.cla()
        canvas.scatter(self.x, self.y, marker='^', c='g', linewidth=0.1)
        canvas.grid(True, color="grey", linestyle='--')
        self.window_5.draw()

    def flexplot(self, parent):
        fig = parent.figure
        # 清除默认图形
        fig.clf()
        # 添加新图形
        axes1 = fig.add_subplot(211)
        axes2 = fig.add_subplot(212)
        axes1.cla()
        axes2.cla()
        axes1.plot(self.dfs[self.selidx-1].index, self.dfs[self.selidx-1][self.selName].astype('float'), color='g', linewidth=0.5)
        axes1.grid(True, color="grey", linestyle='--')
        axes2.plot(self.dfs[self.selidx-1].index, self.dfs[self.selidx-1][self.selName].astype('float'), color='g', linewidth=0.5)
        axes2.grid(True, color="grey", linestyle='--')
        parent.draw()

# end of class MyFrame


class myTable(wx.grid.GridTableBase):
    def __init__(self,datasource):
        wx.grid.GridTableBase.__init__(self)

        self.data={}
        self.colLabels=datasource.columns#用于生成列头的列表
        # self.rowLabels=datasource.index#用于生成行头的列表
        self.rows=datasource.shape[0]#行数
        self.cols=datasource.shape[1]#行数

        for i in range(datasource.shape[0]):
            for j in range(datasource.shape[1]):
                self.data[(i,j)]=datasource.iloc[i,j]#给每一个单元格赋值
                j+=1
            i+=1

    # these five are the required methods
    def GetNumberRows(self):
        return self.rows
    def GetNumberCols(self):
        return self.cols
         
    def GetValue(self, row, col):#为网格提供数据
        value= self.data.get((row, col))
        if value is not None:
            return value
        else:
            return ''
    def SetValue(self, row, col, value):#给表赋值
        self.data[(row,col)]= value

    def GetColLabelValue(self,col):#列头
        return self.colLabels[col]
    # def GetRowLabelValue(self, row):#行头
    #     return self.rowLabels[row]

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
